// projectArchitecture.ts
import * as vscode from 'vscode';
import axios from 'axios';

export async function getProjectFileArch(context: vscode.ExtensionContext) {
     // Step 1: Capture User Input
     const projectDescription = await vscode.window.showInputBox({
        prompt: "Enter your project description",
    });

    if (!projectDescription) {
        vscode.window.showErrorMessage("Project description is required!");
        return;
    }

    try {
        // Step 2: Send Data to Server
        const response = await axios.post('api', {
            description: projectDescription,
        });

        // Step 3: Receive Server Response
        const { files } = response.data;

        if (!files || files.length === 0) {
            vscode.window.showErrorMessage("No files were generated by the server.");
            return;
        }

        // Step 4: Create Files and Directories
        for (const file of files) {
            const filePath = vscode.Uri.joinPath(context.extensionUri, file.path);
            const fileContent = Buffer.from(file.content, 'utf8');
            await vscode.workspace.fs.writeFile(filePath, fileContent);
        }

        vscode.window.showInformationMessage("Project files have been created successfully!");
    } catch (error) {
        vscode.window.showErrorMessage(`Failed to generate project files: ${error}`);
    }
}